---
import Layout from '../layouts/Layout.astro';

const SITE = {
  title: "James Eyler | Computer Engineer & Innovator",
  tagline: "Embedded systems • Hardware design • Automotive tech",
};

const ABOUT = {
  headshot: "/images/headshot.jpeg", // <= your JPEG headshot in /public/images/
  headline: "Hi, I’m James — I design and build embedded systems, IoT platforms, and automotive tech.",
  bio: `
I’m a Computer Engineering student at UCF focused on **real-time/embedded software**, **PCB & hardware design**, and **automotive systems**.
From MSP430/ESP32 firmware and FreeRTOS to custom power/sensor boards and web dashboards, I like turning ideas into reliable builds.
  `,
  hardware: `
**Hardware design focus:** Schematic capture & PCB layout (power, sensing, mixed-signal), regulator selection, decoupling/grounding, and bring-up with scopes/logic analyzers.
  `
};

const EDUCATION = [
  {
    school: "University of Central Florida (UCF)",
    program: "B.S. Computer Engineering",
    dates: "Expected Spring 2026",
    bullets: [
      "Embedded Systems, Real-Time Systems (FreeRTOS), Computer Architecture",
      "Electronics labs: op-amps, difference amps, regulators, ADC/I²C",
      "Projects with MSP430, ESP32, custom PCBs, web dashboards",
    ],
  },
];

const PROJECTS = [
  {
    title: "OpenSense v3",
    summary: "Open-source sensor platform with modular I²C headers, ESP32 firmware, moving-average filtering, and Wi-Fi web UI.",
    tags: ["ESP32","FreeRTOS","I²C","PCB"],
    links: [{ label: "GitHub", href: "https://github.com/your-repo" }],
    files: [
      // add real files you place under /public/files/
      // { label: "Schematics (PDF)", href: "/files/opensense-v3-schematics.pdf" },
      // { label: "Firmware v1.0 (ZIP)", href: "/files/opensense-v1.0.zip" },
    ],
  },
  {
    title: "Parking Assist (AV Theme)",
    summary: "ADC distance sensing with ISR button enable/disable and UART telemetry. Variable LED rate by distance.",
    tags: ["ESP32","RTOS","ADC","ISR"],
    links: [],
    files: [],
  },
];
---

<Layout title={SITE.title}>

  <main class="container">
    <!-- About -->
    <section id="about" class="section">
      <div class="hero">
        <img src={ABOUT.headshot} alt="Headshot of James Eyler" />
        <div>
          <h1>{SITE.title}</h1>
          <p class="tagline">{SITE.tagline}</p>
          <p set:html={ABOUT.headline}></p>
          <p class="muted" set:html={ABOUT.bio}></p>
        </div>
      </div>

      <div class="card" style="margin-top: 1rem;">
        <strong>Hardware Design</strong>
        <p class="muted" set:html={ABOUT.hardware}></p>
      </div>
    </section>

    <!-- Education -->
    <section id="education" class="section">
      <h2>Education</h2>
      <div class="grid">
        {EDUCATION.map((e) => (
          <article class="card">
            <h3>{e.school}</h3>
            <div class="muted">{e.program} • {e.dates}</div>
            <ul>
              {e.bullets.map((b) => <li>{b}</li>)}
            </ul>
          </article>
        ))}
      </div>
    </section>

    <!-- Projects -->
    <section id="projects" class="section">
      <h2>Projects</h2>

      <div class="grid">
        {PROJECTS.map((p) => (
          <article class="card">
            <h3>{p.title}</h3>
            <p class="muted">{p.summary}</p>

            <div class="tags">
              {p.tags.map((t) => <span class="tag">{t}</span>)}
            </div>

            {p.links.length ? (
              <div class="links">
                {p.links.map((l) => <a class="btn" href={l.href} target="_blank" rel="noreferrer">{l.label}</a>)}
              </div>
            ) : null}

            {p.files.length ? (
              <div class="links" style="margin-top:.5rem;">
                {p.files.map((f) => <a class="btn" href={f.href}>{f.label}</a>)}
              </div>
            ) : null}
          </article>
        ))}
      </div>

      <!-- No visitor upload form (per your request) -->
    </section>
  </main>

</Layout>

<style>
  .hero {
    display: grid; grid-template-columns: 120px 1fr;
    gap: 1.25rem; align-items: center;
  }
  .hero img {
    width: 120px; height: 120px; object-fit: cover;
    border-radius: 9999px; border: 2px solid var(--border);
    background: transparent;
  }
  .tagline { color: var(--muted); margin:.15rem 0 .5rem; }
  .links { display:flex; gap:.75rem; flex-wrap:wrap; }
</style>
